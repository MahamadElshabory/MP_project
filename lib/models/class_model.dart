// lib/models/class_model.dart

class ClassModel {
  /// Local SQLite primary key (optional)
  final int? id;

  /// The key generated by Firebase Realtime Database
  final String firebaseKey;

  /// Duplicate of that key for convenience when
  /// constructing from local map rows
  final String key;

  final String courseName;
  final String roomNumber;
  final String professor;
  final String materials;

  /// The exact date & time this class meets
  final DateTime dateTime;

  ClassModel({
    this.id,
    required this.firebaseKey,
    required this.key,
    required this.courseName,
    required this.roomNumber,
    required this.professor,
    required this.materials,
    required this.dateTime,
  });

  /// Construct from a Firebase snapshot
  factory ClassModel.fromFirebase(String key, Map<String, dynamic> m) {
    // pull the dateTime string, default to now() if missing
    final dtString = m['dateTime'] as String?;
    final dt = dtString != null
        ? DateTime.tryParse(dtString) ?? DateTime.now()
        : DateTime.now();

    return ClassModel(
      firebaseKey: key,
      key: key,
      courseName: m['courseName'] as String? ?? '',
      roomNumber: m['roomNumber'] as String? ?? '',
      professor: m['professor'] as String? ?? '',
      materials: m['materials'] as String? ?? '',
      dateTime: dt,
    );
  }

  /// Construct from a local SQLite row
  factory ClassModel.fromMap(Map<String, dynamic> m) {
    return ClassModel(
      id: m['id'] as int?,
      firebaseKey: m['key'] as String? ?? '',
      key: m['key'] as String? ?? '',
      courseName: m['courseName'] as String? ?? '',
      roomNumber: m['roomNumber'] as String? ?? '',
      professor: m['professor'] as String? ?? '',
      materials: m['materials'] as String? ?? '',
      dateTime: DateTime.parse(m['dateTime'] as String),
    );
  }

  ClassModel copyWith({
    int? id,
    String? firebaseKey,
    String? key,
    String? courseName,
    String? roomNumber,
    String? professor,
    String? materials,
    DateTime? dateTime,
  }) {
    return ClassModel(
      id: id ?? this.id,
      firebaseKey: firebaseKey ?? this.firebaseKey,
      key: key ?? this.key,
      courseName: courseName ?? this.courseName,
      roomNumber: roomNumber ?? this.roomNumber,
      professor: professor ?? this.professor,
      materials: materials ?? this.materials,
      dateTime: dateTime ?? this.dateTime,
    );
  }

  /// Convert to a map for Firebase or SQLite
  Map<String, dynamic> toMap() {
    return {
      'courseName': courseName,
      'roomNumber': roomNumber,
      'professor': professor,
      'materials': materials,
      'dateTime': dateTime.toIso8601String(),
    };
  }
}
